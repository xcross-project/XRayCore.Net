// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: transport/internet/config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Xray.Transport.Internet {

  /// <summary>Holder for reflection information generated from transport/internet/config.proto</summary>
  public static partial class ConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for transport/internet/config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch90cmFuc3BvcnQvaW50ZXJuZXQvY29uZmlnLnByb3RvEhd4cmF5LnRyYW5z",
            "cG9ydC5pbnRlcm5ldBohY29tbW9uL3NlcmlhbC90eXBlZF9tZXNzYWdlLnBy",
            "b3RvGhhjb21tb24vbmV0L2FkZHJlc3MucHJvdG8iXAoPVHJhbnNwb3J0Q29u",
            "ZmlnEhUKDXByb3RvY29sX25hbWUYAyABKAkSMgoIc2V0dGluZ3MYAiABKAsy",
            "IC54cmF5LmNvbW1vbi5zZXJpYWwuVHlwZWRNZXNzYWdlIrsCCgxTdHJlYW1D",
            "b25maWcSLAoHYWRkcmVzcxgIIAEoCzIbLnhyYXkuY29tbW9uLm5ldC5JUE9y",
            "RG9tYWluEgwKBHBvcnQYCSABKA0SFQoNcHJvdG9jb2xfbmFtZRgFIAEoCRJE",
            "ChJ0cmFuc3BvcnRfc2V0dGluZ3MYAiADKAsyKC54cmF5LnRyYW5zcG9ydC5p",
            "bnRlcm5ldC5UcmFuc3BvcnRDb25maWcSFQoNc2VjdXJpdHlfdHlwZRgDIAEo",
            "CRI7ChFzZWN1cml0eV9zZXR0aW5ncxgEIAMoCzIgLnhyYXkuY29tbW9uLnNl",
            "cmlhbC5UeXBlZE1lc3NhZ2USPgoPc29ja2V0X3NldHRpbmdzGAYgASgLMiUu",
            "eHJheS50cmFuc3BvcnQuaW50ZXJuZXQuU29ja2V0Q29uZmlnIjcKC1Byb3h5",
            "Q29uZmlnEgsKA3RhZxgBIAEoCRIbChN0cmFuc3BvcnRMYXllclByb3h5GAIg",
            "ASgIIkgKDUN1c3RvbVNvY2tvcHQSDQoFbGV2ZWwYASABKAkSCwoDb3B0GAIg",
            "ASgJEg0KBXZhbHVlGAMgASgJEgwKBHR5cGUYBCABKAkijQUKDFNvY2tldENv",
            "bmZpZxIMCgRtYXJrGAEgASgFEgsKA3RmbxgCIAEoBRJACgZ0cHJveHkYAyAB",
            "KA4yMC54cmF5LnRyYW5zcG9ydC5pbnRlcm5ldC5Tb2NrZXRDb25maWcuVFBy",
            "b3h5TW9kZRIlCh1yZWNlaXZlX29yaWdpbmFsX2Rlc3RfYWRkcmVzcxgEIAEo",
            "CBIUCgxiaW5kX2FkZHJlc3MYBSABKAwSEQoJYmluZF9wb3J0GAYgASgNEh0K",
            "FWFjY2VwdF9wcm94eV9wcm90b2NvbBgHIAEoCBJACg9kb21haW5fc3RyYXRl",
            "Z3kYCCABKA4yJy54cmF5LnRyYW5zcG9ydC5pbnRlcm5ldC5Eb21haW5TdHJh",
            "dGVneRIUCgxkaWFsZXJfcHJveHkYCSABKAkSHwoXdGNwX2tlZXBfYWxpdmVf",
            "aW50ZXJ2YWwYCiABKAUSGwoTdGNwX2tlZXBfYWxpdmVfaWRsZRgLIAEoBRIW",
            "Cg50Y3BfY29uZ2VzdGlvbhgMIAEoCRIRCglpbnRlcmZhY2UYDSABKAkSDgoG",
            "djZvbmx5GA4gASgIEhgKEHRjcF93aW5kb3dfY2xhbXAYDyABKAUSGAoQdGNw",
            "X3VzZXJfdGltZW91dBgQIAEoBRITCgt0Y3BfbWF4X3NlZxgRIAEoBRIUCgx0",
            "Y3Bfbm9fZGVsYXkYEiABKAgSEQoJdGNwX21wdGNwGBMgASgIEj0KDWN1c3Rv",
            "bVNvY2tvcHQYFCADKAsyJi54cmF5LnRyYW5zcG9ydC5pbnRlcm5ldC5DdXN0",
            "b21Tb2Nrb3B0Ii8KClRQcm94eU1vZGUSBwoDT2ZmEAASCgoGVFByb3h5EAES",
            "DAoIUmVkaXJlY3QQAiqpAQoORG9tYWluU3RyYXRlZ3kSCQoFQVNfSVMQABIK",
            "CgZVU0VfSVAQARILCgdVU0VfSVA0EAISCwoHVVNFX0lQNhADEgwKCFVTRV9J",
            "UDQ2EAQSDAoIVVNFX0lQNjQQBRIMCghGT1JDRV9JUBAGEg0KCUZPUkNFX0lQ",
            "NBAHEg0KCUZPUkNFX0lQNhAIEg4KCkZPUkNFX0lQNDYQCRIOCgpGT1JDRV9J",
            "UDY0EApCZwobY29tLnhyYXkudHJhbnNwb3J0LmludGVybmV0UAFaLGdpdGh1",
            "Yi5jb20veHRscy94cmF5LWNvcmUvdHJhbnNwb3J0L2ludGVybmV0qgIXWHJh",
            "eS5UcmFuc3BvcnQuSW50ZXJuZXRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Xray.Common.Serial.TypedMessageReflection.Descriptor, global::Xray.Common.Net.AddressReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Xray.Transport.Internet.DomainStrategy), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.Transport.Internet.TransportConfig), global::Xray.Transport.Internet.TransportConfig.Parser, new[]{ "ProtocolName", "Settings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.Transport.Internet.StreamConfig), global::Xray.Transport.Internet.StreamConfig.Parser, new[]{ "Address", "Port", "ProtocolName", "TransportSettings", "SecurityType", "SecuritySettings", "SocketSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.Transport.Internet.ProxyConfig), global::Xray.Transport.Internet.ProxyConfig.Parser, new[]{ "Tag", "TransportLayerProxy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.Transport.Internet.CustomSockopt), global::Xray.Transport.Internet.CustomSockopt.Parser, new[]{ "Level", "Opt", "Value", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.Transport.Internet.SocketConfig), global::Xray.Transport.Internet.SocketConfig.Parser, new[]{ "Mark", "Tfo", "Tproxy", "ReceiveOriginalDestAddress", "BindAddress", "BindPort", "AcceptProxyProtocol", "DomainStrategy", "DialerProxy", "TcpKeepAliveInterval", "TcpKeepAliveIdle", "TcpCongestion", "Interface", "V6Only", "TcpWindowClamp", "TcpUserTimeout", "TcpMaxSeg", "TcpNoDelay", "TcpMptcp", "CustomSockopt" }, null, new[]{ typeof(global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum DomainStrategy {
    [pbr::OriginalName("AS_IS")] AsIs = 0,
    [pbr::OriginalName("USE_IP")] UseIp = 1,
    [pbr::OriginalName("USE_IP4")] UseIp4 = 2,
    [pbr::OriginalName("USE_IP6")] UseIp6 = 3,
    [pbr::OriginalName("USE_IP46")] UseIp46 = 4,
    [pbr::OriginalName("USE_IP64")] UseIp64 = 5,
    [pbr::OriginalName("FORCE_IP")] ForceIp = 6,
    [pbr::OriginalName("FORCE_IP4")] ForceIp4 = 7,
    [pbr::OriginalName("FORCE_IP6")] ForceIp6 = 8,
    [pbr::OriginalName("FORCE_IP46")] ForceIp46 = 9,
    [pbr::OriginalName("FORCE_IP64")] ForceIp64 = 10,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TransportConfig : pb::IMessage<TransportConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransportConfig> _parser = new pb::MessageParser<TransportConfig>(() => new TransportConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransportConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xray.Transport.Internet.ConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransportConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransportConfig(TransportConfig other) : this() {
      protocolName_ = other.protocolName_;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransportConfig Clone() {
      return new TransportConfig(this);
    }

    /// <summary>Field number for the "protocol_name" field.</summary>
    public const int ProtocolNameFieldNumber = 3;
    private string protocolName_ = "";
    /// <summary>
    /// Transport protocol name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProtocolName {
      get { return protocolName_; }
      set {
        protocolName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 2;
    private global::Xray.Common.Serial.TypedMessage settings_;
    /// <summary>
    /// Specific transport protocol settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xray.Common.Serial.TypedMessage Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransportConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransportConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolName != other.ProtocolName) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolName.Length != 0) hash ^= ProtocolName.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (settings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Settings);
      }
      if (ProtocolName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProtocolName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (settings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Settings);
      }
      if (ProtocolName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProtocolName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtocolName);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransportConfig other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolName.Length != 0) {
        ProtocolName = other.ProtocolName;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::Xray.Common.Serial.TypedMessage();
        }
        Settings.MergeFrom(other.Settings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (settings_ == null) {
              Settings = new global::Xray.Common.Serial.TypedMessage();
            }
            input.ReadMessage(Settings);
            break;
          }
          case 26: {
            ProtocolName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (settings_ == null) {
              Settings = new global::Xray.Common.Serial.TypedMessage();
            }
            input.ReadMessage(Settings);
            break;
          }
          case 26: {
            ProtocolName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StreamConfig : pb::IMessage<StreamConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamConfig> _parser = new pb::MessageParser<StreamConfig>(() => new StreamConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xray.Transport.Internet.ConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamConfig(StreamConfig other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      port_ = other.port_;
      protocolName_ = other.protocolName_;
      transportSettings_ = other.transportSettings_.Clone();
      securityType_ = other.securityType_;
      securitySettings_ = other.securitySettings_.Clone();
      socketSettings_ = other.socketSettings_ != null ? other.socketSettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamConfig Clone() {
      return new StreamConfig(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 8;
    private global::Xray.Common.Net.IPOrDomain address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xray.Common.Net.IPOrDomain Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 9;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "protocol_name" field.</summary>
    public const int ProtocolNameFieldNumber = 5;
    private string protocolName_ = "";
    /// <summary>
    /// Effective network.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProtocolName {
      get { return protocolName_; }
      set {
        protocolName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transport_settings" field.</summary>
    public const int TransportSettingsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Xray.Transport.Internet.TransportConfig> _repeated_transportSettings_codec
        = pb::FieldCodec.ForMessage(18, global::Xray.Transport.Internet.TransportConfig.Parser);
    private readonly pbc::RepeatedField<global::Xray.Transport.Internet.TransportConfig> transportSettings_ = new pbc::RepeatedField<global::Xray.Transport.Internet.TransportConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xray.Transport.Internet.TransportConfig> TransportSettings {
      get { return transportSettings_; }
    }

    /// <summary>Field number for the "security_type" field.</summary>
    public const int SecurityTypeFieldNumber = 3;
    private string securityType_ = "";
    /// <summary>
    /// Type of security. Must be a message name of the settings proto.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecurityType {
      get { return securityType_; }
      set {
        securityType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "security_settings" field.</summary>
    public const int SecuritySettingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Xray.Common.Serial.TypedMessage> _repeated_securitySettings_codec
        = pb::FieldCodec.ForMessage(34, global::Xray.Common.Serial.TypedMessage.Parser);
    private readonly pbc::RepeatedField<global::Xray.Common.Serial.TypedMessage> securitySettings_ = new pbc::RepeatedField<global::Xray.Common.Serial.TypedMessage>();
    /// <summary>
    /// Transport security settings. They can be either TLS or REALITY.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xray.Common.Serial.TypedMessage> SecuritySettings {
      get { return securitySettings_; }
    }

    /// <summary>Field number for the "socket_settings" field.</summary>
    public const int SocketSettingsFieldNumber = 6;
    private global::Xray.Transport.Internet.SocketConfig socketSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xray.Transport.Internet.SocketConfig SocketSettings {
      get { return socketSettings_; }
      set {
        socketSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (Port != other.Port) return false;
      if (ProtocolName != other.ProtocolName) return false;
      if(!transportSettings_.Equals(other.transportSettings_)) return false;
      if (SecurityType != other.SecurityType) return false;
      if(!securitySettings_.Equals(other.securitySettings_)) return false;
      if (!object.Equals(SocketSettings, other.SocketSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (ProtocolName.Length != 0) hash ^= ProtocolName.GetHashCode();
      hash ^= transportSettings_.GetHashCode();
      if (SecurityType.Length != 0) hash ^= SecurityType.GetHashCode();
      hash ^= securitySettings_.GetHashCode();
      if (socketSettings_ != null) hash ^= SocketSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      transportSettings_.WriteTo(output, _repeated_transportSettings_codec);
      if (SecurityType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SecurityType);
      }
      securitySettings_.WriteTo(output, _repeated_securitySettings_codec);
      if (ProtocolName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProtocolName);
      }
      if (socketSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SocketSettings);
      }
      if (address_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Address);
      }
      if (Port != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      transportSettings_.WriteTo(ref output, _repeated_transportSettings_codec);
      if (SecurityType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SecurityType);
      }
      securitySettings_.WriteTo(ref output, _repeated_securitySettings_codec);
      if (ProtocolName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProtocolName);
      }
      if (socketSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SocketSettings);
      }
      if (address_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Address);
      }
      if (Port != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (ProtocolName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtocolName);
      }
      size += transportSettings_.CalculateSize(_repeated_transportSettings_codec);
      if (SecurityType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecurityType);
      }
      size += securitySettings_.CalculateSize(_repeated_securitySettings_codec);
      if (socketSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SocketSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamConfig other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Xray.Common.Net.IPOrDomain();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.ProtocolName.Length != 0) {
        ProtocolName = other.ProtocolName;
      }
      transportSettings_.Add(other.transportSettings_);
      if (other.SecurityType.Length != 0) {
        SecurityType = other.SecurityType;
      }
      securitySettings_.Add(other.securitySettings_);
      if (other.socketSettings_ != null) {
        if (socketSettings_ == null) {
          SocketSettings = new global::Xray.Transport.Internet.SocketConfig();
        }
        SocketSettings.MergeFrom(other.SocketSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            transportSettings_.AddEntriesFrom(input, _repeated_transportSettings_codec);
            break;
          }
          case 26: {
            SecurityType = input.ReadString();
            break;
          }
          case 34: {
            securitySettings_.AddEntriesFrom(input, _repeated_securitySettings_codec);
            break;
          }
          case 42: {
            ProtocolName = input.ReadString();
            break;
          }
          case 50: {
            if (socketSettings_ == null) {
              SocketSettings = new global::Xray.Transport.Internet.SocketConfig();
            }
            input.ReadMessage(SocketSettings);
            break;
          }
          case 66: {
            if (address_ == null) {
              Address = new global::Xray.Common.Net.IPOrDomain();
            }
            input.ReadMessage(Address);
            break;
          }
          case 72: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            transportSettings_.AddEntriesFrom(ref input, _repeated_transportSettings_codec);
            break;
          }
          case 26: {
            SecurityType = input.ReadString();
            break;
          }
          case 34: {
            securitySettings_.AddEntriesFrom(ref input, _repeated_securitySettings_codec);
            break;
          }
          case 42: {
            ProtocolName = input.ReadString();
            break;
          }
          case 50: {
            if (socketSettings_ == null) {
              SocketSettings = new global::Xray.Transport.Internet.SocketConfig();
            }
            input.ReadMessage(SocketSettings);
            break;
          }
          case 66: {
            if (address_ == null) {
              Address = new global::Xray.Common.Net.IPOrDomain();
            }
            input.ReadMessage(Address);
            break;
          }
          case 72: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProxyConfig : pb::IMessage<ProxyConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProxyConfig> _parser = new pb::MessageParser<ProxyConfig>(() => new ProxyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProxyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xray.Transport.Internet.ConfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProxyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProxyConfig(ProxyConfig other) : this() {
      tag_ = other.tag_;
      transportLayerProxy_ = other.transportLayerProxy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProxyConfig Clone() {
      return new ProxyConfig(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private string tag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transportLayerProxy" field.</summary>
    public const int TransportLayerProxyFieldNumber = 2;
    private bool transportLayerProxy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TransportLayerProxy {
      get { return transportLayerProxy_; }
      set {
        transportLayerProxy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProxyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProxyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      if (TransportLayerProxy != other.TransportLayerProxy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (TransportLayerProxy != false) hash ^= TransportLayerProxy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Tag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tag);
      }
      if (TransportLayerProxy != false) {
        output.WriteRawTag(16);
        output.WriteBool(TransportLayerProxy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Tag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tag);
      }
      if (TransportLayerProxy != false) {
        output.WriteRawTag(16);
        output.WriteBool(TransportLayerProxy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (TransportLayerProxy != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProxyConfig other) {
      if (other == null) {
        return;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.TransportLayerProxy != false) {
        TransportLayerProxy = other.TransportLayerProxy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tag = input.ReadString();
            break;
          }
          case 16: {
            TransportLayerProxy = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Tag = input.ReadString();
            break;
          }
          case 16: {
            TransportLayerProxy = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CustomSockopt : pb::IMessage<CustomSockopt>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomSockopt> _parser = new pb::MessageParser<CustomSockopt>(() => new CustomSockopt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CustomSockopt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xray.Transport.Internet.ConfigReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomSockopt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomSockopt(CustomSockopt other) : this() {
      level_ = other.level_;
      opt_ = other.opt_;
      value_ = other.value_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomSockopt Clone() {
      return new CustomSockopt(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private string level_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Level {
      get { return level_; }
      set {
        level_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "opt" field.</summary>
    public const int OptFieldNumber = 2;
    private string opt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Opt {
      get { return opt_; }
      set {
        opt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CustomSockopt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CustomSockopt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Opt != other.Opt) return false;
      if (Value != other.Value) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Level.Length != 0) hash ^= Level.GetHashCode();
      if (Opt.Length != 0) hash ^= Opt.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Level);
      }
      if (Opt.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Opt);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Level);
      }
      if (Opt.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Opt);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Level.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Level);
      }
      if (Opt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Opt);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CustomSockopt other) {
      if (other == null) {
        return;
      }
      if (other.Level.Length != 0) {
        Level = other.Level;
      }
      if (other.Opt.Length != 0) {
        Opt = other.Opt;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Level = input.ReadString();
            break;
          }
          case 18: {
            Opt = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Level = input.ReadString();
            break;
          }
          case 18: {
            Opt = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// SocketConfig is options to be applied on network sockets.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SocketConfig : pb::IMessage<SocketConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SocketConfig> _parser = new pb::MessageParser<SocketConfig>(() => new SocketConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SocketConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xray.Transport.Internet.ConfigReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SocketConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SocketConfig(SocketConfig other) : this() {
      mark_ = other.mark_;
      tfo_ = other.tfo_;
      tproxy_ = other.tproxy_;
      receiveOriginalDestAddress_ = other.receiveOriginalDestAddress_;
      bindAddress_ = other.bindAddress_;
      bindPort_ = other.bindPort_;
      acceptProxyProtocol_ = other.acceptProxyProtocol_;
      domainStrategy_ = other.domainStrategy_;
      dialerProxy_ = other.dialerProxy_;
      tcpKeepAliveInterval_ = other.tcpKeepAliveInterval_;
      tcpKeepAliveIdle_ = other.tcpKeepAliveIdle_;
      tcpCongestion_ = other.tcpCongestion_;
      interface_ = other.interface_;
      v6Only_ = other.v6Only_;
      tcpWindowClamp_ = other.tcpWindowClamp_;
      tcpUserTimeout_ = other.tcpUserTimeout_;
      tcpMaxSeg_ = other.tcpMaxSeg_;
      tcpNoDelay_ = other.tcpNoDelay_;
      tcpMptcp_ = other.tcpMptcp_;
      customSockopt_ = other.customSockopt_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SocketConfig Clone() {
      return new SocketConfig(this);
    }

    /// <summary>Field number for the "mark" field.</summary>
    public const int MarkFieldNumber = 1;
    private int mark_;
    /// <summary>
    /// Mark of the connection. If non-zero, the value will be set to SO_MARK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mark {
      get { return mark_; }
      set {
        mark_ = value;
      }
    }

    /// <summary>Field number for the "tfo" field.</summary>
    public const int TfoFieldNumber = 2;
    private int tfo_;
    /// <summary>
    /// TFO is the state of TFO settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tfo {
      get { return tfo_; }
      set {
        tfo_ = value;
      }
    }

    /// <summary>Field number for the "tproxy" field.</summary>
    public const int TproxyFieldNumber = 3;
    private global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode tproxy_ = global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode.Off;
    /// <summary>
    /// TProxy is for enabling TProxy socket option.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode Tproxy {
      get { return tproxy_; }
      set {
        tproxy_ = value;
      }
    }

    /// <summary>Field number for the "receive_original_dest_address" field.</summary>
    public const int ReceiveOriginalDestAddressFieldNumber = 4;
    private bool receiveOriginalDestAddress_;
    /// <summary>
    /// ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
    /// option. This option is for UDP only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReceiveOriginalDestAddress {
      get { return receiveOriginalDestAddress_; }
      set {
        receiveOriginalDestAddress_ = value;
      }
    }

    /// <summary>Field number for the "bind_address" field.</summary>
    public const int BindAddressFieldNumber = 5;
    private pb::ByteString bindAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BindAddress {
      get { return bindAddress_; }
      set {
        bindAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bind_port" field.</summary>
    public const int BindPortFieldNumber = 6;
    private uint bindPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BindPort {
      get { return bindPort_; }
      set {
        bindPort_ = value;
      }
    }

    /// <summary>Field number for the "accept_proxy_protocol" field.</summary>
    public const int AcceptProxyProtocolFieldNumber = 7;
    private bool acceptProxyProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AcceptProxyProtocol {
      get { return acceptProxyProtocol_; }
      set {
        acceptProxyProtocol_ = value;
      }
    }

    /// <summary>Field number for the "domain_strategy" field.</summary>
    public const int DomainStrategyFieldNumber = 8;
    private global::Xray.Transport.Internet.DomainStrategy domainStrategy_ = global::Xray.Transport.Internet.DomainStrategy.AsIs;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xray.Transport.Internet.DomainStrategy DomainStrategy {
      get { return domainStrategy_; }
      set {
        domainStrategy_ = value;
      }
    }

    /// <summary>Field number for the "dialer_proxy" field.</summary>
    public const int DialerProxyFieldNumber = 9;
    private string dialerProxy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DialerProxy {
      get { return dialerProxy_; }
      set {
        dialerProxy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tcp_keep_alive_interval" field.</summary>
    public const int TcpKeepAliveIntervalFieldNumber = 10;
    private int tcpKeepAliveInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TcpKeepAliveInterval {
      get { return tcpKeepAliveInterval_; }
      set {
        tcpKeepAliveInterval_ = value;
      }
    }

    /// <summary>Field number for the "tcp_keep_alive_idle" field.</summary>
    public const int TcpKeepAliveIdleFieldNumber = 11;
    private int tcpKeepAliveIdle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TcpKeepAliveIdle {
      get { return tcpKeepAliveIdle_; }
      set {
        tcpKeepAliveIdle_ = value;
      }
    }

    /// <summary>Field number for the "tcp_congestion" field.</summary>
    public const int TcpCongestionFieldNumber = 12;
    private string tcpCongestion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TcpCongestion {
      get { return tcpCongestion_; }
      set {
        tcpCongestion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interface" field.</summary>
    public const int InterfaceFieldNumber = 13;
    private string interface_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Interface {
      get { return interface_; }
      set {
        interface_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "v6only" field.</summary>
    public const int V6OnlyFieldNumber = 14;
    private bool v6Only_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool V6Only {
      get { return v6Only_; }
      set {
        v6Only_ = value;
      }
    }

    /// <summary>Field number for the "tcp_window_clamp" field.</summary>
    public const int TcpWindowClampFieldNumber = 15;
    private int tcpWindowClamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TcpWindowClamp {
      get { return tcpWindowClamp_; }
      set {
        tcpWindowClamp_ = value;
      }
    }

    /// <summary>Field number for the "tcp_user_timeout" field.</summary>
    public const int TcpUserTimeoutFieldNumber = 16;
    private int tcpUserTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TcpUserTimeout {
      get { return tcpUserTimeout_; }
      set {
        tcpUserTimeout_ = value;
      }
    }

    /// <summary>Field number for the "tcp_max_seg" field.</summary>
    public const int TcpMaxSegFieldNumber = 17;
    private int tcpMaxSeg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TcpMaxSeg {
      get { return tcpMaxSeg_; }
      set {
        tcpMaxSeg_ = value;
      }
    }

    /// <summary>Field number for the "tcp_no_delay" field.</summary>
    public const int TcpNoDelayFieldNumber = 18;
    private bool tcpNoDelay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TcpNoDelay {
      get { return tcpNoDelay_; }
      set {
        tcpNoDelay_ = value;
      }
    }

    /// <summary>Field number for the "tcp_mptcp" field.</summary>
    public const int TcpMptcpFieldNumber = 19;
    private bool tcpMptcp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TcpMptcp {
      get { return tcpMptcp_; }
      set {
        tcpMptcp_ = value;
      }
    }

    /// <summary>Field number for the "customSockopt" field.</summary>
    public const int CustomSockoptFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Xray.Transport.Internet.CustomSockopt> _repeated_customSockopt_codec
        = pb::FieldCodec.ForMessage(162, global::Xray.Transport.Internet.CustomSockopt.Parser);
    private readonly pbc::RepeatedField<global::Xray.Transport.Internet.CustomSockopt> customSockopt_ = new pbc::RepeatedField<global::Xray.Transport.Internet.CustomSockopt>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xray.Transport.Internet.CustomSockopt> CustomSockopt {
      get { return customSockopt_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SocketConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SocketConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mark != other.Mark) return false;
      if (Tfo != other.Tfo) return false;
      if (Tproxy != other.Tproxy) return false;
      if (ReceiveOriginalDestAddress != other.ReceiveOriginalDestAddress) return false;
      if (BindAddress != other.BindAddress) return false;
      if (BindPort != other.BindPort) return false;
      if (AcceptProxyProtocol != other.AcceptProxyProtocol) return false;
      if (DomainStrategy != other.DomainStrategy) return false;
      if (DialerProxy != other.DialerProxy) return false;
      if (TcpKeepAliveInterval != other.TcpKeepAliveInterval) return false;
      if (TcpKeepAliveIdle != other.TcpKeepAliveIdle) return false;
      if (TcpCongestion != other.TcpCongestion) return false;
      if (Interface != other.Interface) return false;
      if (V6Only != other.V6Only) return false;
      if (TcpWindowClamp != other.TcpWindowClamp) return false;
      if (TcpUserTimeout != other.TcpUserTimeout) return false;
      if (TcpMaxSeg != other.TcpMaxSeg) return false;
      if (TcpNoDelay != other.TcpNoDelay) return false;
      if (TcpMptcp != other.TcpMptcp) return false;
      if(!customSockopt_.Equals(other.customSockopt_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Mark != 0) hash ^= Mark.GetHashCode();
      if (Tfo != 0) hash ^= Tfo.GetHashCode();
      if (Tproxy != global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode.Off) hash ^= Tproxy.GetHashCode();
      if (ReceiveOriginalDestAddress != false) hash ^= ReceiveOriginalDestAddress.GetHashCode();
      if (BindAddress.Length != 0) hash ^= BindAddress.GetHashCode();
      if (BindPort != 0) hash ^= BindPort.GetHashCode();
      if (AcceptProxyProtocol != false) hash ^= AcceptProxyProtocol.GetHashCode();
      if (DomainStrategy != global::Xray.Transport.Internet.DomainStrategy.AsIs) hash ^= DomainStrategy.GetHashCode();
      if (DialerProxy.Length != 0) hash ^= DialerProxy.GetHashCode();
      if (TcpKeepAliveInterval != 0) hash ^= TcpKeepAliveInterval.GetHashCode();
      if (TcpKeepAliveIdle != 0) hash ^= TcpKeepAliveIdle.GetHashCode();
      if (TcpCongestion.Length != 0) hash ^= TcpCongestion.GetHashCode();
      if (Interface.Length != 0) hash ^= Interface.GetHashCode();
      if (V6Only != false) hash ^= V6Only.GetHashCode();
      if (TcpWindowClamp != 0) hash ^= TcpWindowClamp.GetHashCode();
      if (TcpUserTimeout != 0) hash ^= TcpUserTimeout.GetHashCode();
      if (TcpMaxSeg != 0) hash ^= TcpMaxSeg.GetHashCode();
      if (TcpNoDelay != false) hash ^= TcpNoDelay.GetHashCode();
      if (TcpMptcp != false) hash ^= TcpMptcp.GetHashCode();
      hash ^= customSockopt_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mark != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Mark);
      }
      if (Tfo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Tfo);
      }
      if (Tproxy != global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode.Off) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Tproxy);
      }
      if (ReceiveOriginalDestAddress != false) {
        output.WriteRawTag(32);
        output.WriteBool(ReceiveOriginalDestAddress);
      }
      if (BindAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(BindAddress);
      }
      if (BindPort != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BindPort);
      }
      if (AcceptProxyProtocol != false) {
        output.WriteRawTag(56);
        output.WriteBool(AcceptProxyProtocol);
      }
      if (DomainStrategy != global::Xray.Transport.Internet.DomainStrategy.AsIs) {
        output.WriteRawTag(64);
        output.WriteEnum((int) DomainStrategy);
      }
      if (DialerProxy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DialerProxy);
      }
      if (TcpKeepAliveInterval != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TcpKeepAliveInterval);
      }
      if (TcpKeepAliveIdle != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(TcpKeepAliveIdle);
      }
      if (TcpCongestion.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TcpCongestion);
      }
      if (Interface.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Interface);
      }
      if (V6Only != false) {
        output.WriteRawTag(112);
        output.WriteBool(V6Only);
      }
      if (TcpWindowClamp != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(TcpWindowClamp);
      }
      if (TcpUserTimeout != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(TcpUserTimeout);
      }
      if (TcpMaxSeg != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(TcpMaxSeg);
      }
      if (TcpNoDelay != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(TcpNoDelay);
      }
      if (TcpMptcp != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(TcpMptcp);
      }
      customSockopt_.WriteTo(output, _repeated_customSockopt_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mark != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Mark);
      }
      if (Tfo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Tfo);
      }
      if (Tproxy != global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode.Off) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Tproxy);
      }
      if (ReceiveOriginalDestAddress != false) {
        output.WriteRawTag(32);
        output.WriteBool(ReceiveOriginalDestAddress);
      }
      if (BindAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(BindAddress);
      }
      if (BindPort != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BindPort);
      }
      if (AcceptProxyProtocol != false) {
        output.WriteRawTag(56);
        output.WriteBool(AcceptProxyProtocol);
      }
      if (DomainStrategy != global::Xray.Transport.Internet.DomainStrategy.AsIs) {
        output.WriteRawTag(64);
        output.WriteEnum((int) DomainStrategy);
      }
      if (DialerProxy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DialerProxy);
      }
      if (TcpKeepAliveInterval != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TcpKeepAliveInterval);
      }
      if (TcpKeepAliveIdle != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(TcpKeepAliveIdle);
      }
      if (TcpCongestion.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TcpCongestion);
      }
      if (Interface.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Interface);
      }
      if (V6Only != false) {
        output.WriteRawTag(112);
        output.WriteBool(V6Only);
      }
      if (TcpWindowClamp != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(TcpWindowClamp);
      }
      if (TcpUserTimeout != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(TcpUserTimeout);
      }
      if (TcpMaxSeg != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(TcpMaxSeg);
      }
      if (TcpNoDelay != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(TcpNoDelay);
      }
      if (TcpMptcp != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(TcpMptcp);
      }
      customSockopt_.WriteTo(ref output, _repeated_customSockopt_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Mark != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mark);
      }
      if (Tfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tfo);
      }
      if (Tproxy != global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode.Off) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Tproxy);
      }
      if (ReceiveOriginalDestAddress != false) {
        size += 1 + 1;
      }
      if (BindAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BindAddress);
      }
      if (BindPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BindPort);
      }
      if (AcceptProxyProtocol != false) {
        size += 1 + 1;
      }
      if (DomainStrategy != global::Xray.Transport.Internet.DomainStrategy.AsIs) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DomainStrategy);
      }
      if (DialerProxy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DialerProxy);
      }
      if (TcpKeepAliveInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TcpKeepAliveInterval);
      }
      if (TcpKeepAliveIdle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TcpKeepAliveIdle);
      }
      if (TcpCongestion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TcpCongestion);
      }
      if (Interface.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Interface);
      }
      if (V6Only != false) {
        size += 1 + 1;
      }
      if (TcpWindowClamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TcpWindowClamp);
      }
      if (TcpUserTimeout != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TcpUserTimeout);
      }
      if (TcpMaxSeg != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TcpMaxSeg);
      }
      if (TcpNoDelay != false) {
        size += 2 + 1;
      }
      if (TcpMptcp != false) {
        size += 2 + 1;
      }
      size += customSockopt_.CalculateSize(_repeated_customSockopt_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SocketConfig other) {
      if (other == null) {
        return;
      }
      if (other.Mark != 0) {
        Mark = other.Mark;
      }
      if (other.Tfo != 0) {
        Tfo = other.Tfo;
      }
      if (other.Tproxy != global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode.Off) {
        Tproxy = other.Tproxy;
      }
      if (other.ReceiveOriginalDestAddress != false) {
        ReceiveOriginalDestAddress = other.ReceiveOriginalDestAddress;
      }
      if (other.BindAddress.Length != 0) {
        BindAddress = other.BindAddress;
      }
      if (other.BindPort != 0) {
        BindPort = other.BindPort;
      }
      if (other.AcceptProxyProtocol != false) {
        AcceptProxyProtocol = other.AcceptProxyProtocol;
      }
      if (other.DomainStrategy != global::Xray.Transport.Internet.DomainStrategy.AsIs) {
        DomainStrategy = other.DomainStrategy;
      }
      if (other.DialerProxy.Length != 0) {
        DialerProxy = other.DialerProxy;
      }
      if (other.TcpKeepAliveInterval != 0) {
        TcpKeepAliveInterval = other.TcpKeepAliveInterval;
      }
      if (other.TcpKeepAliveIdle != 0) {
        TcpKeepAliveIdle = other.TcpKeepAliveIdle;
      }
      if (other.TcpCongestion.Length != 0) {
        TcpCongestion = other.TcpCongestion;
      }
      if (other.Interface.Length != 0) {
        Interface = other.Interface;
      }
      if (other.V6Only != false) {
        V6Only = other.V6Only;
      }
      if (other.TcpWindowClamp != 0) {
        TcpWindowClamp = other.TcpWindowClamp;
      }
      if (other.TcpUserTimeout != 0) {
        TcpUserTimeout = other.TcpUserTimeout;
      }
      if (other.TcpMaxSeg != 0) {
        TcpMaxSeg = other.TcpMaxSeg;
      }
      if (other.TcpNoDelay != false) {
        TcpNoDelay = other.TcpNoDelay;
      }
      if (other.TcpMptcp != false) {
        TcpMptcp = other.TcpMptcp;
      }
      customSockopt_.Add(other.customSockopt_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mark = input.ReadInt32();
            break;
          }
          case 16: {
            Tfo = input.ReadInt32();
            break;
          }
          case 24: {
            Tproxy = (global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode) input.ReadEnum();
            break;
          }
          case 32: {
            ReceiveOriginalDestAddress = input.ReadBool();
            break;
          }
          case 42: {
            BindAddress = input.ReadBytes();
            break;
          }
          case 48: {
            BindPort = input.ReadUInt32();
            break;
          }
          case 56: {
            AcceptProxyProtocol = input.ReadBool();
            break;
          }
          case 64: {
            DomainStrategy = (global::Xray.Transport.Internet.DomainStrategy) input.ReadEnum();
            break;
          }
          case 74: {
            DialerProxy = input.ReadString();
            break;
          }
          case 80: {
            TcpKeepAliveInterval = input.ReadInt32();
            break;
          }
          case 88: {
            TcpKeepAliveIdle = input.ReadInt32();
            break;
          }
          case 98: {
            TcpCongestion = input.ReadString();
            break;
          }
          case 106: {
            Interface = input.ReadString();
            break;
          }
          case 112: {
            V6Only = input.ReadBool();
            break;
          }
          case 120: {
            TcpWindowClamp = input.ReadInt32();
            break;
          }
          case 128: {
            TcpUserTimeout = input.ReadInt32();
            break;
          }
          case 136: {
            TcpMaxSeg = input.ReadInt32();
            break;
          }
          case 144: {
            TcpNoDelay = input.ReadBool();
            break;
          }
          case 152: {
            TcpMptcp = input.ReadBool();
            break;
          }
          case 162: {
            customSockopt_.AddEntriesFrom(input, _repeated_customSockopt_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mark = input.ReadInt32();
            break;
          }
          case 16: {
            Tfo = input.ReadInt32();
            break;
          }
          case 24: {
            Tproxy = (global::Xray.Transport.Internet.SocketConfig.Types.TProxyMode) input.ReadEnum();
            break;
          }
          case 32: {
            ReceiveOriginalDestAddress = input.ReadBool();
            break;
          }
          case 42: {
            BindAddress = input.ReadBytes();
            break;
          }
          case 48: {
            BindPort = input.ReadUInt32();
            break;
          }
          case 56: {
            AcceptProxyProtocol = input.ReadBool();
            break;
          }
          case 64: {
            DomainStrategy = (global::Xray.Transport.Internet.DomainStrategy) input.ReadEnum();
            break;
          }
          case 74: {
            DialerProxy = input.ReadString();
            break;
          }
          case 80: {
            TcpKeepAliveInterval = input.ReadInt32();
            break;
          }
          case 88: {
            TcpKeepAliveIdle = input.ReadInt32();
            break;
          }
          case 98: {
            TcpCongestion = input.ReadString();
            break;
          }
          case 106: {
            Interface = input.ReadString();
            break;
          }
          case 112: {
            V6Only = input.ReadBool();
            break;
          }
          case 120: {
            TcpWindowClamp = input.ReadInt32();
            break;
          }
          case 128: {
            TcpUserTimeout = input.ReadInt32();
            break;
          }
          case 136: {
            TcpMaxSeg = input.ReadInt32();
            break;
          }
          case 144: {
            TcpNoDelay = input.ReadBool();
            break;
          }
          case 152: {
            TcpMptcp = input.ReadBool();
            break;
          }
          case 162: {
            customSockopt_.AddEntriesFrom(ref input, _repeated_customSockopt_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SocketConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum TProxyMode {
        /// <summary>
        /// TProxy is off.
        /// </summary>
        [pbr::OriginalName("Off")] Off = 0,
        /// <summary>
        /// TProxy mode.
        /// </summary>
        [pbr::OriginalName("TProxy")] Tproxy = 1,
        /// <summary>
        /// Redirect mode.
        /// </summary>
        [pbr::OriginalName("Redirect")] Redirect = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
