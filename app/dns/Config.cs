// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: app/dns/config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Xray.App.Dns {

  /// <summary>Holder for reflection information generated from app/dns/config.proto</summary>
  public static partial class ConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for app/dns/config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRhcHAvZG5zL2NvbmZpZy5wcm90bxIMeHJheS5hcHAuZG5zGhxjb21tb24v",
            "bmV0L2Rlc3RpbmF0aW9uLnByb3RvGhdhcHAvcm91dGVyL2NvbmZpZy5wcm90",
            "byK/AwoKTmFtZVNlcnZlchIqCgdhZGRyZXNzGAEgASgLMhkueHJheS5jb21t",
            "b24ubmV0LkVuZHBvaW50EhEKCWNsaWVudF9pcBgFIAEoDBIUCgxza2lwRmFs",
            "bGJhY2sYBiABKAgSQwoScHJpb3JpdGl6ZWRfZG9tYWluGAIgAygLMicueHJh",
            "eS5hcHAuZG5zLk5hbWVTZXJ2ZXIuUHJpb3JpdHlEb21haW4SJQoFZ2VvaXAY",
            "AyADKAsyFi54cmF5LmFwcC5yb3V0ZXIuR2VvSVASPQoOb3JpZ2luYWxfcnVs",
            "ZXMYBCADKAsyJS54cmF5LmFwcC5kbnMuTmFtZVNlcnZlci5PcmlnaW5hbFJ1",
            "bGUSMwoOcXVlcnlfc3RyYXRlZ3kYByABKA4yGy54cmF5LmFwcC5kbnMuUXVl",
            "cnlTdHJhdGVneRpQCg5Qcmlvcml0eURvbWFpbhIuCgR0eXBlGAEgASgOMiAu",
            "eHJheS5hcHAuZG5zLkRvbWFpbk1hdGNoaW5nVHlwZRIOCgZkb21haW4YAiAB",
            "KAkaKgoMT3JpZ2luYWxSdWxlEgwKBHJ1bGUYASABKAkSDAoEc2l6ZRgCIAEo",
            "DSKMAwoGQ29uZmlnEi0KC25hbWVfc2VydmVyGAUgAygLMhgueHJheS5hcHAu",
            "ZG5zLk5hbWVTZXJ2ZXISEQoJY2xpZW50X2lwGAMgASgMEjYKDHN0YXRpY19o",
            "b3N0cxgEIAMoCzIgLnhyYXkuYXBwLmRucy5Db25maWcuSG9zdE1hcHBpbmcS",
            "CwoDdGFnGAYgASgJEhQKDGRpc2FibGVDYWNoZRgIIAEoCBIzCg5xdWVyeV9z",
            "dHJhdGVneRgJIAEoDjIbLnhyYXkuYXBwLmRucy5RdWVyeVN0cmF0ZWd5EhcK",
            "D2Rpc2FibGVGYWxsYmFjaxgKIAEoCBIeChZkaXNhYmxlRmFsbGJhY2tJZk1h",
            "dGNoGAsgASgIGnEKC0hvc3RNYXBwaW5nEi4KBHR5cGUYASABKA4yIC54cmF5",
            "LmFwcC5kbnMuRG9tYWluTWF0Y2hpbmdUeXBlEg4KBmRvbWFpbhgCIAEoCRIK",
            "CgJpcBgDIAMoDBIWCg5wcm94aWVkX2RvbWFpbhgEIAEoCUoECAcQCCpFChJE",
            "b21haW5NYXRjaGluZ1R5cGUSCAoERnVsbBAAEg0KCVN1YmRvbWFpbhABEgsK",
            "B0tleXdvcmQQAhIJCgVSZWdleBADKjUKDVF1ZXJ5U3RyYXRlZ3kSCgoGVVNF",
            "X0lQEAASCwoHVVNFX0lQNBABEgsKB1VTRV9JUDYQAkJGChBjb20ueHJheS5h",
            "cHAuZG5zUAFaIWdpdGh1Yi5jb20veHRscy94cmF5LWNvcmUvYXBwL2Ruc6oC",
            "DFhyYXkuQXBwLkRuc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Xray.Common.Net.DestinationReflection.Descriptor, global::Xray.App.Router.ConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Xray.App.Dns.DomainMatchingType), typeof(global::Xray.App.Dns.QueryStrategy), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.App.Dns.NameServer), global::Xray.App.Dns.NameServer.Parser, new[]{ "Address", "ClientIp", "SkipFallback", "PrioritizedDomain", "Geoip", "OriginalRules", "QueryStrategy" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Xray.App.Dns.NameServer.Types.PriorityDomain), global::Xray.App.Dns.NameServer.Types.PriorityDomain.Parser, new[]{ "Type", "Domain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.App.Dns.NameServer.Types.OriginalRule), global::Xray.App.Dns.NameServer.Types.OriginalRule.Parser, new[]{ "Rule", "Size" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.App.Dns.Config), global::Xray.App.Dns.Config.Parser, new[]{ "NameServer", "ClientIp", "StaticHosts", "Tag", "DisableCache", "QueryStrategy", "DisableFallback", "DisableFallbackIfMatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Xray.App.Dns.Config.Types.HostMapping), global::Xray.App.Dns.Config.Types.HostMapping.Parser, new[]{ "Type", "Domain", "Ip", "ProxiedDomain" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum DomainMatchingType {
    [pbr::OriginalName("Full")] Full = 0,
    [pbr::OriginalName("Subdomain")] Subdomain = 1,
    [pbr::OriginalName("Keyword")] Keyword = 2,
    [pbr::OriginalName("Regex")] Regex = 3,
  }

  public enum QueryStrategy {
    [pbr::OriginalName("USE_IP")] UseIp = 0,
    [pbr::OriginalName("USE_IP4")] UseIp4 = 1,
    [pbr::OriginalName("USE_IP6")] UseIp6 = 2,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NameServer : pb::IMessage<NameServer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NameServer> _parser = new pb::MessageParser<NameServer>(() => new NameServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NameServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xray.App.Dns.ConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NameServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NameServer(NameServer other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      clientIp_ = other.clientIp_;
      skipFallback_ = other.skipFallback_;
      prioritizedDomain_ = other.prioritizedDomain_.Clone();
      geoip_ = other.geoip_.Clone();
      originalRules_ = other.originalRules_.Clone();
      queryStrategy_ = other.queryStrategy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NameServer Clone() {
      return new NameServer(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::Xray.Common.Net.Endpoint address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xray.Common.Net.Endpoint Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 5;
    private pb::ByteString clientIp_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skipFallback" field.</summary>
    public const int SkipFallbackFieldNumber = 6;
    private bool skipFallback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SkipFallback {
      get { return skipFallback_; }
      set {
        skipFallback_ = value;
      }
    }

    /// <summary>Field number for the "prioritized_domain" field.</summary>
    public const int PrioritizedDomainFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Xray.App.Dns.NameServer.Types.PriorityDomain> _repeated_prioritizedDomain_codec
        = pb::FieldCodec.ForMessage(18, global::Xray.App.Dns.NameServer.Types.PriorityDomain.Parser);
    private readonly pbc::RepeatedField<global::Xray.App.Dns.NameServer.Types.PriorityDomain> prioritizedDomain_ = new pbc::RepeatedField<global::Xray.App.Dns.NameServer.Types.PriorityDomain>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xray.App.Dns.NameServer.Types.PriorityDomain> PrioritizedDomain {
      get { return prioritizedDomain_; }
    }

    /// <summary>Field number for the "geoip" field.</summary>
    public const int GeoipFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Xray.App.Router.GeoIP> _repeated_geoip_codec
        = pb::FieldCodec.ForMessage(26, global::Xray.App.Router.GeoIP.Parser);
    private readonly pbc::RepeatedField<global::Xray.App.Router.GeoIP> geoip_ = new pbc::RepeatedField<global::Xray.App.Router.GeoIP>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xray.App.Router.GeoIP> Geoip {
      get { return geoip_; }
    }

    /// <summary>Field number for the "original_rules" field.</summary>
    public const int OriginalRulesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Xray.App.Dns.NameServer.Types.OriginalRule> _repeated_originalRules_codec
        = pb::FieldCodec.ForMessage(34, global::Xray.App.Dns.NameServer.Types.OriginalRule.Parser);
    private readonly pbc::RepeatedField<global::Xray.App.Dns.NameServer.Types.OriginalRule> originalRules_ = new pbc::RepeatedField<global::Xray.App.Dns.NameServer.Types.OriginalRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xray.App.Dns.NameServer.Types.OriginalRule> OriginalRules {
      get { return originalRules_; }
    }

    /// <summary>Field number for the "query_strategy" field.</summary>
    public const int QueryStrategyFieldNumber = 7;
    private global::Xray.App.Dns.QueryStrategy queryStrategy_ = global::Xray.App.Dns.QueryStrategy.UseIp;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xray.App.Dns.QueryStrategy QueryStrategy {
      get { return queryStrategy_; }
      set {
        queryStrategy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NameServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NameServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (ClientIp != other.ClientIp) return false;
      if (SkipFallback != other.SkipFallback) return false;
      if(!prioritizedDomain_.Equals(other.prioritizedDomain_)) return false;
      if(!geoip_.Equals(other.geoip_)) return false;
      if(!originalRules_.Equals(other.originalRules_)) return false;
      if (QueryStrategy != other.QueryStrategy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (SkipFallback != false) hash ^= SkipFallback.GetHashCode();
      hash ^= prioritizedDomain_.GetHashCode();
      hash ^= geoip_.GetHashCode();
      hash ^= originalRules_.GetHashCode();
      if (QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) hash ^= QueryStrategy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      prioritizedDomain_.WriteTo(output, _repeated_prioritizedDomain_codec);
      geoip_.WriteTo(output, _repeated_geoip_codec);
      originalRules_.WriteTo(output, _repeated_originalRules_codec);
      if (ClientIp.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(ClientIp);
      }
      if (SkipFallback != false) {
        output.WriteRawTag(48);
        output.WriteBool(SkipFallback);
      }
      if (QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) {
        output.WriteRawTag(56);
        output.WriteEnum((int) QueryStrategy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      prioritizedDomain_.WriteTo(ref output, _repeated_prioritizedDomain_codec);
      geoip_.WriteTo(ref output, _repeated_geoip_codec);
      originalRules_.WriteTo(ref output, _repeated_originalRules_codec);
      if (ClientIp.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(ClientIp);
      }
      if (SkipFallback != false) {
        output.WriteRawTag(48);
        output.WriteBool(SkipFallback);
      }
      if (QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) {
        output.WriteRawTag(56);
        output.WriteEnum((int) QueryStrategy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientIp);
      }
      if (SkipFallback != false) {
        size += 1 + 1;
      }
      size += prioritizedDomain_.CalculateSize(_repeated_prioritizedDomain_codec);
      size += geoip_.CalculateSize(_repeated_geoip_codec);
      size += originalRules_.CalculateSize(_repeated_originalRules_codec);
      if (QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QueryStrategy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NameServer other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Xray.Common.Net.Endpoint();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.SkipFallback != false) {
        SkipFallback = other.SkipFallback;
      }
      prioritizedDomain_.Add(other.prioritizedDomain_);
      geoip_.Add(other.geoip_);
      originalRules_.Add(other.originalRules_);
      if (other.QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) {
        QueryStrategy = other.QueryStrategy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::Xray.Common.Net.Endpoint();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            prioritizedDomain_.AddEntriesFrom(input, _repeated_prioritizedDomain_codec);
            break;
          }
          case 26: {
            geoip_.AddEntriesFrom(input, _repeated_geoip_codec);
            break;
          }
          case 34: {
            originalRules_.AddEntriesFrom(input, _repeated_originalRules_codec);
            break;
          }
          case 42: {
            ClientIp = input.ReadBytes();
            break;
          }
          case 48: {
            SkipFallback = input.ReadBool();
            break;
          }
          case 56: {
            QueryStrategy = (global::Xray.App.Dns.QueryStrategy) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::Xray.Common.Net.Endpoint();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            prioritizedDomain_.AddEntriesFrom(ref input, _repeated_prioritizedDomain_codec);
            break;
          }
          case 26: {
            geoip_.AddEntriesFrom(ref input, _repeated_geoip_codec);
            break;
          }
          case 34: {
            originalRules_.AddEntriesFrom(ref input, _repeated_originalRules_codec);
            break;
          }
          case 42: {
            ClientIp = input.ReadBytes();
            break;
          }
          case 48: {
            SkipFallback = input.ReadBool();
            break;
          }
          case 56: {
            QueryStrategy = (global::Xray.App.Dns.QueryStrategy) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NameServer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PriorityDomain : pb::IMessage<PriorityDomain>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PriorityDomain> _parser = new pb::MessageParser<PriorityDomain>(() => new PriorityDomain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PriorityDomain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Xray.App.Dns.NameServer.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PriorityDomain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PriorityDomain(PriorityDomain other) : this() {
          type_ = other.type_;
          domain_ = other.domain_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PriorityDomain Clone() {
          return new PriorityDomain(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Xray.App.Dns.DomainMatchingType type_ = global::Xray.App.Dns.DomainMatchingType.Full;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Xray.App.Dns.DomainMatchingType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "domain" field.</summary>
        public const int DomainFieldNumber = 2;
        private string domain_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Domain {
          get { return domain_; }
          set {
            domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PriorityDomain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PriorityDomain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Domain != other.Domain) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Xray.App.Dns.DomainMatchingType.Full) hash ^= Type.GetHashCode();
          if (Domain.Length != 0) hash ^= Domain.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Xray.App.Dns.DomainMatchingType.Full) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Domain.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Domain);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Xray.App.Dns.DomainMatchingType.Full) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Domain.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Domain);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Xray.App.Dns.DomainMatchingType.Full) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (Domain.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PriorityDomain other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Xray.App.Dns.DomainMatchingType.Full) {
            Type = other.Type;
          }
          if (other.Domain.Length != 0) {
            Domain = other.Domain;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Xray.App.Dns.DomainMatchingType) input.ReadEnum();
                break;
              }
              case 18: {
                Domain = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Xray.App.Dns.DomainMatchingType) input.ReadEnum();
                break;
              }
              case 18: {
                Domain = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class OriginalRule : pb::IMessage<OriginalRule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OriginalRule> _parser = new pb::MessageParser<OriginalRule>(() => new OriginalRule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OriginalRule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Xray.App.Dns.NameServer.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OriginalRule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OriginalRule(OriginalRule other) : this() {
          rule_ = other.rule_;
          size_ = other.size_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OriginalRule Clone() {
          return new OriginalRule(this);
        }

        /// <summary>Field number for the "rule" field.</summary>
        public const int RuleFieldNumber = 1;
        private string rule_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Rule {
          get { return rule_; }
          set {
            rule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 2;
        private uint size_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OriginalRule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OriginalRule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Rule != other.Rule) return false;
          if (Size != other.Size) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Rule.Length != 0) hash ^= Rule.GetHashCode();
          if (Size != 0) hash ^= Size.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Rule.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Rule);
          }
          if (Size != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Size);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Rule.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Rule);
          }
          if (Size != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Size);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Rule.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Rule);
          }
          if (Size != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OriginalRule other) {
          if (other == null) {
            return;
          }
          if (other.Rule.Length != 0) {
            Rule = other.Rule;
          }
          if (other.Size != 0) {
            Size = other.Size;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Rule = input.ReadString();
                break;
              }
              case 16: {
                Size = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Rule = input.ReadString();
                break;
              }
              case 16: {
                Size = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Config : pb::IMessage<Config>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xray.App.Dns.ConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config(Config other) : this() {
      nameServer_ = other.nameServer_.Clone();
      clientIp_ = other.clientIp_;
      staticHosts_ = other.staticHosts_.Clone();
      tag_ = other.tag_;
      disableCache_ = other.disableCache_;
      queryStrategy_ = other.queryStrategy_;
      disableFallback_ = other.disableFallback_;
      disableFallbackIfMatch_ = other.disableFallbackIfMatch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "name_server" field.</summary>
    public const int NameServerFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Xray.App.Dns.NameServer> _repeated_nameServer_codec
        = pb::FieldCodec.ForMessage(42, global::Xray.App.Dns.NameServer.Parser);
    private readonly pbc::RepeatedField<global::Xray.App.Dns.NameServer> nameServer_ = new pbc::RepeatedField<global::Xray.App.Dns.NameServer>();
    /// <summary>
    /// NameServer list used by this DNS client.
    /// A special value 'localhost' as a domain address can be set to use DNS on local system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xray.App.Dns.NameServer> NameServer {
      get { return nameServer_; }
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 3;
    private pb::ByteString clientIp_ = pb::ByteString.Empty;
    /// <summary>
    /// Client IP for EDNS client subnet. Must be 4 bytes (IPv4) or 16 bytes
    /// (IPv6).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "static_hosts" field.</summary>
    public const int StaticHostsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Xray.App.Dns.Config.Types.HostMapping> _repeated_staticHosts_codec
        = pb::FieldCodec.ForMessage(34, global::Xray.App.Dns.Config.Types.HostMapping.Parser);
    private readonly pbc::RepeatedField<global::Xray.App.Dns.Config.Types.HostMapping> staticHosts_ = new pbc::RepeatedField<global::Xray.App.Dns.Config.Types.HostMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xray.App.Dns.Config.Types.HostMapping> StaticHosts {
      get { return staticHosts_; }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 6;
    private string tag_ = "";
    /// <summary>
    /// Tag is the inbound tag of DNS client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disableCache" field.</summary>
    public const int DisableCacheFieldNumber = 8;
    private bool disableCache_;
    /// <summary>
    /// DisableCache disables DNS cache
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableCache {
      get { return disableCache_; }
      set {
        disableCache_ = value;
      }
    }

    /// <summary>Field number for the "query_strategy" field.</summary>
    public const int QueryStrategyFieldNumber = 9;
    private global::Xray.App.Dns.QueryStrategy queryStrategy_ = global::Xray.App.Dns.QueryStrategy.UseIp;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xray.App.Dns.QueryStrategy QueryStrategy {
      get { return queryStrategy_; }
      set {
        queryStrategy_ = value;
      }
    }

    /// <summary>Field number for the "disableFallback" field.</summary>
    public const int DisableFallbackFieldNumber = 10;
    private bool disableFallback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableFallback {
      get { return disableFallback_; }
      set {
        disableFallback_ = value;
      }
    }

    /// <summary>Field number for the "disableFallbackIfMatch" field.</summary>
    public const int DisableFallbackIfMatchFieldNumber = 11;
    private bool disableFallbackIfMatch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableFallbackIfMatch {
      get { return disableFallbackIfMatch_; }
      set {
        disableFallbackIfMatch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nameServer_.Equals(other.nameServer_)) return false;
      if (ClientIp != other.ClientIp) return false;
      if(!staticHosts_.Equals(other.staticHosts_)) return false;
      if (Tag != other.Tag) return false;
      if (DisableCache != other.DisableCache) return false;
      if (QueryStrategy != other.QueryStrategy) return false;
      if (DisableFallback != other.DisableFallback) return false;
      if (DisableFallbackIfMatch != other.DisableFallbackIfMatch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nameServer_.GetHashCode();
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      hash ^= staticHosts_.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (DisableCache != false) hash ^= DisableCache.GetHashCode();
      if (QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) hash ^= QueryStrategy.GetHashCode();
      if (DisableFallback != false) hash ^= DisableFallback.GetHashCode();
      if (DisableFallbackIfMatch != false) hash ^= DisableFallbackIfMatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientIp.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ClientIp);
      }
      staticHosts_.WriteTo(output, _repeated_staticHosts_codec);
      nameServer_.WriteTo(output, _repeated_nameServer_codec);
      if (Tag.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Tag);
      }
      if (DisableCache != false) {
        output.WriteRawTag(64);
        output.WriteBool(DisableCache);
      }
      if (QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) {
        output.WriteRawTag(72);
        output.WriteEnum((int) QueryStrategy);
      }
      if (DisableFallback != false) {
        output.WriteRawTag(80);
        output.WriteBool(DisableFallback);
      }
      if (DisableFallbackIfMatch != false) {
        output.WriteRawTag(88);
        output.WriteBool(DisableFallbackIfMatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ClientIp);
      }
      staticHosts_.WriteTo(ref output, _repeated_staticHosts_codec);
      nameServer_.WriteTo(ref output, _repeated_nameServer_codec);
      if (Tag.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Tag);
      }
      if (DisableCache != false) {
        output.WriteRawTag(64);
        output.WriteBool(DisableCache);
      }
      if (QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) {
        output.WriteRawTag(72);
        output.WriteEnum((int) QueryStrategy);
      }
      if (DisableFallback != false) {
        output.WriteRawTag(80);
        output.WriteBool(DisableFallback);
      }
      if (DisableFallbackIfMatch != false) {
        output.WriteRawTag(88);
        output.WriteBool(DisableFallbackIfMatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += nameServer_.CalculateSize(_repeated_nameServer_codec);
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientIp);
      }
      size += staticHosts_.CalculateSize(_repeated_staticHosts_codec);
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (DisableCache != false) {
        size += 1 + 1;
      }
      if (QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QueryStrategy);
      }
      if (DisableFallback != false) {
        size += 1 + 1;
      }
      if (DisableFallbackIfMatch != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      nameServer_.Add(other.nameServer_);
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      staticHosts_.Add(other.staticHosts_);
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.DisableCache != false) {
        DisableCache = other.DisableCache;
      }
      if (other.QueryStrategy != global::Xray.App.Dns.QueryStrategy.UseIp) {
        QueryStrategy = other.QueryStrategy;
      }
      if (other.DisableFallback != false) {
        DisableFallback = other.DisableFallback;
      }
      if (other.DisableFallbackIfMatch != false) {
        DisableFallbackIfMatch = other.DisableFallbackIfMatch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            ClientIp = input.ReadBytes();
            break;
          }
          case 34: {
            staticHosts_.AddEntriesFrom(input, _repeated_staticHosts_codec);
            break;
          }
          case 42: {
            nameServer_.AddEntriesFrom(input, _repeated_nameServer_codec);
            break;
          }
          case 50: {
            Tag = input.ReadString();
            break;
          }
          case 64: {
            DisableCache = input.ReadBool();
            break;
          }
          case 72: {
            QueryStrategy = (global::Xray.App.Dns.QueryStrategy) input.ReadEnum();
            break;
          }
          case 80: {
            DisableFallback = input.ReadBool();
            break;
          }
          case 88: {
            DisableFallbackIfMatch = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            ClientIp = input.ReadBytes();
            break;
          }
          case 34: {
            staticHosts_.AddEntriesFrom(ref input, _repeated_staticHosts_codec);
            break;
          }
          case 42: {
            nameServer_.AddEntriesFrom(ref input, _repeated_nameServer_codec);
            break;
          }
          case 50: {
            Tag = input.ReadString();
            break;
          }
          case 64: {
            DisableCache = input.ReadBool();
            break;
          }
          case 72: {
            QueryStrategy = (global::Xray.App.Dns.QueryStrategy) input.ReadEnum();
            break;
          }
          case 80: {
            DisableFallback = input.ReadBool();
            break;
          }
          case 88: {
            DisableFallbackIfMatch = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Config message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class HostMapping : pb::IMessage<HostMapping>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<HostMapping> _parser = new pb::MessageParser<HostMapping>(() => new HostMapping());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<HostMapping> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Xray.App.Dns.Config.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HostMapping() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HostMapping(HostMapping other) : this() {
          type_ = other.type_;
          domain_ = other.domain_;
          ip_ = other.ip_.Clone();
          proxiedDomain_ = other.proxiedDomain_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HostMapping Clone() {
          return new HostMapping(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Xray.App.Dns.DomainMatchingType type_ = global::Xray.App.Dns.DomainMatchingType.Full;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Xray.App.Dns.DomainMatchingType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "domain" field.</summary>
        public const int DomainFieldNumber = 2;
        private string domain_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Domain {
          get { return domain_; }
          set {
            domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ip" field.</summary>
        public const int IpFieldNumber = 3;
        private static readonly pb::FieldCodec<pb::ByteString> _repeated_ip_codec
            = pb::FieldCodec.ForBytes(26);
        private readonly pbc::RepeatedField<pb::ByteString> ip_ = new pbc::RepeatedField<pb::ByteString>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<pb::ByteString> Ip {
          get { return ip_; }
        }

        /// <summary>Field number for the "proxied_domain" field.</summary>
        public const int ProxiedDomainFieldNumber = 4;
        private string proxiedDomain_ = "";
        /// <summary>
        /// ProxiedDomain indicates the mapped domain has the same IP address on this
        /// domain. Xray will use this domain for IP queries.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ProxiedDomain {
          get { return proxiedDomain_; }
          set {
            proxiedDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as HostMapping);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(HostMapping other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Domain != other.Domain) return false;
          if(!ip_.Equals(other.ip_)) return false;
          if (ProxiedDomain != other.ProxiedDomain) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Xray.App.Dns.DomainMatchingType.Full) hash ^= Type.GetHashCode();
          if (Domain.Length != 0) hash ^= Domain.GetHashCode();
          hash ^= ip_.GetHashCode();
          if (ProxiedDomain.Length != 0) hash ^= ProxiedDomain.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Xray.App.Dns.DomainMatchingType.Full) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Domain.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Domain);
          }
          ip_.WriteTo(output, _repeated_ip_codec);
          if (ProxiedDomain.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ProxiedDomain);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Xray.App.Dns.DomainMatchingType.Full) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Domain.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Domain);
          }
          ip_.WriteTo(ref output, _repeated_ip_codec);
          if (ProxiedDomain.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ProxiedDomain);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Xray.App.Dns.DomainMatchingType.Full) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (Domain.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
          }
          size += ip_.CalculateSize(_repeated_ip_codec);
          if (ProxiedDomain.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxiedDomain);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(HostMapping other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Xray.App.Dns.DomainMatchingType.Full) {
            Type = other.Type;
          }
          if (other.Domain.Length != 0) {
            Domain = other.Domain;
          }
          ip_.Add(other.ip_);
          if (other.ProxiedDomain.Length != 0) {
            ProxiedDomain = other.ProxiedDomain;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Xray.App.Dns.DomainMatchingType) input.ReadEnum();
                break;
              }
              case 18: {
                Domain = input.ReadString();
                break;
              }
              case 26: {
                ip_.AddEntriesFrom(input, _repeated_ip_codec);
                break;
              }
              case 34: {
                ProxiedDomain = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Xray.App.Dns.DomainMatchingType) input.ReadEnum();
                break;
              }
              case 18: {
                Domain = input.ReadString();
                break;
              }
              case 26: {
                ip_.AddEntriesFrom(ref input, _repeated_ip_codec);
                break;
              }
              case 34: {
                ProxiedDomain = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
